//
// ServerErrorType.swift
// Copyright (c) 2022 Chat
//
// Created by Hamed Hosseini on 12/9/22

import Foundation

public enum ServerErrorType: Int, CaseIterable {
    case unknownError = 999
    case notLogined = 2
    case invalidToken = 21
    case invalidTokenScope = 22
    case insufficientUserData = 23
    case invalidFormat = 31
    case aclCommunication = 32
    case ssoCommunication = 33
    case userNotRegistered = 34
    case ssoUserNotCreated = 35
    case replayAttack = 39
    case tokenNotAuthorized = 40
    case ssoInvalidClientDetails = 69
    case objectNotFound = 78
    case invalidNumber = 79
    case invalidRequest = 100
    case sameOwnerAndPartner = 101
    case serviceCallTimeout = 102
    case serviceCallError = 103
    case notContactId = 104
    case tooManyParticipantToInvite = 105
    case invalidType = 106
    case userNotFound = 107
    case threadNotFound = 108
    case canNotGetThreadMembers = 109
    case notThreadMember = 110
    case permissionDenied = 111
    case inconsistentReply = 112
    case ssoException = 113
    case messageNotFound = 114
    case editDurationFinished = 115
    case messageAlreadyDeleted = 116
    case itemNotFound = 117
    case userIsBlocked = 118
    case invalidBlockRequest = 119
    case badMessageContent = 120
    case messageSizeOverflow = 121
    case notThreadAdmin = 122
    case invalidJsonQuery = 123
    case messagesFromDifferentThreads = 124
    case pinThreadsExceedAllowedNumber = 125
    case notPinnedThread = 126
    case threadAlreadyPinned = 127
    case messageHaveNotPinned = 128
    case uniqueNameIsNeeded = 129
    case uniqueNameIsRepetitive = 130
    case haveAlreadyJoinedTheThread = 131
    case reportReasonIsRequired = 132
    case messageTypeIsNotValid = 133
    case metadataIsRequired = 134
    case nameIsRequiredInMetadata = 135
    case idIsRequiredInMetadata = 136
    case tooManyParticipant = 137
    case invalidIdType = 138
    case botNameIsNotValid = 140
    case commandIsNotOwnedByBot = 141
    case commandIsNeeded = 142
    case commandFormatIsNotValid = 143
    case botOnlyCanReply_message = 144
    case botIsReplyingNotRelatedMessage = 145
    case botHasAlreadyStarted = 146
    case botHasAlreadyStoped = 147
    case botNameIsNeeded = 148
    case contacttypeHasNotRegistredApp = 150
    case fcmAppRegistredBefor = 151
    case deviceTokenHasAlreadyRegistred = 152
    case callNotFound = 160
    case callHasNoParticipant = 161
    case notCallPaerticipant = 162
    case callEnded = 163
    case tooManyParticipantToInviteCall = 164
    case callAlreadyEnded = 165
    case inconsistencyBetweenCallSessionAndMessageThreadType = 166
    case userIsActiveInAnotherCall = 167
    case userHasBeenAddedToCall = 168
    case callIsNotActive = 169
    case notGroupCall = 170
    case callParticipantIsNotActiveInCall = 171
    case muteUserListIsEmpty = 172
    case notValidUsersToBeMute = 173
    case notValidUsersToBeUnmute = 174
    case kafkaIsOutOfReach = 175
    case callSourceTypeIsRequiered = 176
    case videoCallUserListIsEmpty = 177
    case callAcceptContentIsRequiered = 178
    case callParticipantIsNotRecording = 179
    case notPermitedCall = 180
    case userIsSharingScreen = 181
    case contentIsMandatory = 182
    case clientCallErrorCodeIsNotValid = 183
    case anotherCallParticipantIsAlreadyRecording = 184
    case recordDestinationThreadIdIsNeeded = 185
    case anyContactNotFound = 186
    case threadHasNotAnyOtherActiveParticipant = 187
    case anotherCallIsActive = 188
    case kafkaAdminFailed = 190
    case noOtherOwnership = 200
    case threadAlreadyClosed = 201
    case timeCriteriaIsNeeded = 202
    case uniqueIdIsNeeded = 203
    case latitudeIsRequiredInMetadata = 204
    case longitudeIsRequiredInMetadata = 205
    case deleteForAllNotAllowed = 206
    case threadTypeIsNeeded = 207
    case temporaryBan = 208
    case invalidThreadMetdataFormat = 210
    case podSpaceServicCallError = 211
    case addParticipantsFailed = 212
    case tagNotFound = 220
    case tagNameIsRequired = 221
    case tooManyTagToCreate = 222
    case tooManyTagParticipnatToCreate=223
    case notOwnership = 230
    case messageThreadIsNotGroupOrChannel = 231
    case messageThraedIsNotPeerToPeer = 234
    case solrException = 250
    case elasticUnknownException = 251
    case notificationServiceCallError = 300
    case notificationtAppNotFound = 301
    case canNotFindSameThreadId = 310
    case canNotFoundUserIdInContent = 312
    case threadAlreadyArchived = 313
    case callStickerIsNotValid = 314
    case searchCustomerServiceError = 315
    case participantHasAlreadyBeenAddedToCurrentCall = 316
    case getCardInfoServiceError = 317
    case tagIdIsNull = 318
    case tagParticipantNotFound = 319
    case contactIdListIsNull = 320
    case cacheCallCreatorException = 321
    case inquiryCallKafkaException = 322
    case addDuplicateParticipant = 323
    case callCenterMigrationException = 324
    case genericException = 325
    case recordingServerException = 326
    case startRecordException = 327
    case endRecordException = 328
    case duplicateRequestStartRecordException = 329
    case permissionDeniedEndRecordException = 330
    case addContactTypeServiceException = 331
    case aclRoleNotFoundException = 346
    case reactionTimeoutException = 347
    case reactionIdIsNeeded = 348
    case reactionNotFound = 349
    case duplicateCraeteSelfThread = 311
}
