{
  "includedArchiveIdentifiers" : [
    "Chat"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/chat\/gettingstarted",
            "title" : "Getting Started",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingthreads",
            "title" : "Managing Threads",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingmessages",
            "title" : "Managing Messages",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingcontacts",
            "title" : "Managing Contacts",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingfiles",
            "title" : "Managing Files",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingusers",
            "title" : "Managing Users",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingtags",
            "title" : "Managing Tags",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingbots",
            "title" : "Managing Bots",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingassistants",
            "title" : "Managing Assistants",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/managingmaps",
            "title" : "Managing Maps",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/chat\/errorcodes",
            "title" : "Error Codes",
            "type" : "article"
          },
          {
            "title" : "Important classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chat\/init(config:pingtimer:queuetimer:bantimer:session:calldelegate:)",
                "title" : "init(config: ChatConfig, pingTimer: SourceTimer, queueTimer: SourceTimer, banTimer: any TimerProtocol, session: any URLSessionProtocol, callDelegate: (any WebRTCClientDelegate)?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chat\/assistant",
                "title" : "var assistant: any AssistantProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/bot",
                "title" : "var bot: any BotProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/config",
                "title" : "var config: ChatConfig",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/contact",
                "title" : "var contact: any ContactProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/conversation",
                "title" : "var conversation: any ThreadProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/delegate",
                "title" : "var delegate: (any ChatDelegate)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/file",
                "title" : "var file: any FileProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/id",
                "title" : "var id: UUID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/map",
                "title" : "var map: any MapProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/message",
                "title" : "var message: any MessageProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/reaction",
                "title" : "var reaction: any ReactionProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/state",
                "title" : "var state: ChatState",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/system",
                "title" : "var system: any SystemProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/tag",
                "title" : "var tag: any TagProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/user",
                "title" : "var user: any UserProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chat\/userinfo",
                "title" : "var userInfo: User?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chat\/connect()",
                "title" : "func connect()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chat\/dispose()",
                "title" : "func dispose()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chat\/settoken(newtoken:recreateobject:)",
                "title" : "func setToken(newToken: String, reCreateObject: Bool)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/chat",
            "title" : "Chat",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatdelegate\/chatevent(event:)",
                "title" : "func chatEvent(event: ChatEventType)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatdelegate\/chatstate(state:currentuser:error:)",
                "title" : "func chatState(state: ChatState, currentUser: User?, error: ChatError?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/chatdelegate",
            "title" : "ChatDelegate",
            "type" : "protocol"
          },
          {
            "title" : "Articles",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/chat\/managingsystem",
            "title" : "Managing System",
            "type" : "article"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/init(pingtimer:queuetimer:)",
                "title" : "init(pingTimer: SourceTimer, queueTimer: SourceTimer)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/asyncclient",
                "title" : "var asyncClient: Async?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/asyncerror(error:)",
                "title" : "func asyncError(error: AsyncError)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/asyncmessage(asyncmessage:)",
                "title" : "func asyncMessage(asyncMessage: AsyncMessage)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/asyncmessagesent(message:error:)",
                "title" : "func asyncMessageSent(message: Data?, error: AsyncError?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/asyncstatechanged(asyncstate:error:)",
                "title" : "func asyncStateChanged(asyncState: AsyncSocketState, error: AsyncError?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/createasync()",
                "title" : "func createAsync()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/disposeobject()",
                "title" : "func disposeObject()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/onlog(log:)",
                "title" : "func onLog(log: Log)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/pop(_:)",
                "title" : "func pop(String?) -> (count: Int, offset: Int)?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/asyncmanager\/senddata(sendable:type:)",
                "title" : "func sendData(sendable: any ChatSendable, type: ChatMessageVOTypes)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/asyncmanager",
            "title" : "AsyncManager",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/init(filemanager:group:queue:logger:)",
                "title" : "init(fileManager: any FileManagerProtocol, group: String?, queue: any DispatchQueueProtocol, logger: Logger?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/documentpath",
                "title" : "var documentPath: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/fm",
                "title" : "let fm: any FileManagerProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/group",
                "title" : "let group: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/groupfolder",
                "title" : "var groupFolder: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/logger",
                "title" : "let logger: Logger?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/queue",
                "title" : "let queue: any DispatchQueueProtocol",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/createdirectory()",
                "title" : "func createDirectory()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/creategroupdirectory()",
                "title" : "func createGroupDirectory()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/deletefile(at:)",
                "title" : "func deleteFile(at: URL)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/deletefolder(url:)",
                "title" : "func deleteFolder(url: URL)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/filepath(url:)",
                "title" : "func filePath(url: URL) -> URL?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/filepathingroup(url:)",
                "title" : "func filePathInGroup(url: URL) -> URL?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/getdata(url:completion:)",
                "title" : "func getData(url: URL, completion: (Data?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/getdataingroup(url:completion:)",
                "title" : "func getDataInGroup(url: URL, completion: (Data?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/isfileexist(url:)",
                "title" : "func isFileExist(url: URL) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/isfileexistingroup(url:)",
                "title" : "func isFileExistInGroup(url: URL) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/savefile(url:data:savecompeletion:)",
                "title" : "func saveFile(url: URL, data: Data, saveCompeletion: (URL?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/cachefilemanager\/savefileingroup(url:data:savecompeletion:)",
                "title" : "func saveFileInGroup(url: URL, data: Data, saveCompeletion: (URL?) -> Void)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/cachefilemanager",
            "title" : "CacheFileManager",
            "type" : "class"
          },
          {
            "path" : "\/documentation\/chat\/chatcoordinator",
            "title" : "ChatCoordinator",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/init(config:pingtimer:queuetimer:bantimer:session:calldelegate:)",
                "title" : "init(config: ChatConfig, pingTimer: SourceTimer, queueTimer: SourceTimer, banTimer: any TimerProtocol, session: any URLSessionProtocol, callDelegate: (any WebRTCClientDelegate)?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/assistant",
                "title" : "var assistant: any AssistantProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/asyncmanager",
                "title" : "var asyncManager: AsyncManager",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/bantimer",
                "title" : "var banTimer: any TimerProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/bot",
                "title" : "var bot: any BotProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/cache",
                "title" : "var cache: CacheManager?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/cachefilemanager",
                "title" : "var cacheFileManager: (any CacheFileManagerProtocol)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/calldelegate",
                "title" : "var callDelegate: (any WebRTCClientDelegate)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/callmessagedeleaget",
                "title" : "var callMessageDeleaget: (any CallMessageProtocol)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/config",
                "title" : "var config: ChatConfig",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/contact",
                "title" : "var contact: any ContactProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/conversation",
                "title" : "var conversation: any ThreadProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/coordinator",
                "title" : "var coordinator: ChatCoordinator",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/delegate",
                "title" : "var delegate: (any ChatDelegate)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/exportmessageviewmodels",
                "title" : "var exportMessageViewModels: [any ExportMessagesProtocol]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/file",
                "title" : "var file: any FileProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/id",
                "title" : "var id: UUID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/logger",
                "title" : "var logger: Logger",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/map",
                "title" : "var map: any MapProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/message",
                "title" : "var message: any MessageProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/reaction",
                "title" : "var reaction: any ReactionProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/session",
                "title" : "var session: any URLSessionProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/state",
                "title" : "var state: ChatState",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/system",
                "title" : "var system: any SystemProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/tag",
                "title" : "var tag: any TagProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/user",
                "title" : "var user: any UserProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/userinfo",
                "title" : "var userInfo: User?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/connect()",
                "title" : "func connect()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/dispose()",
                "title" : "func dispose()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/preparetosendasync(req:type:)",
                "title" : "func prepareToSendAsync(req: any ChatSendable, type: ChatMessageVOTypes)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatimplementation\/settoken(newtoken:recreateobject:)",
                "title" : "func setToken(newToken: String, reCreateObject: Bool)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/chatimplementation\/log(message:persist:error:)",
                    "title" : "func log(message: String, persist: Bool, error: (any Error)?)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/chatimplementation\/cachelogdelegate-implementations",
                "title" : "CacheLogDelegate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/chatimplementation\/loggeruserinfo",
                    "title" : "var loggerUserInfo: [String : String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/chatimplementation\/invokecallback(asyncmessage:)",
                    "title" : "func invokeCallback(asyncMessage: AsyncMessage)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/chatimplementation\/chatinternalprotocol-implementations",
                "title" : "ChatInternalProtocol Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/chatimplementation",
            "title" : "ChatImplementation",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatmanager\/createorreplaceuserinstance(userid:config:)",
                "title" : "func createOrReplaceUserInstance(userId: Int?, config: ChatConfig)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatmanager\/removeinstance(chatid:)",
                "title" : "func removeInstance(chatId: UUID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatmanager\/switchinstance(chatid:)",
                "title" : "func switchInstance(chatId: UUID)",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatmanager\/activeinstance",
                "title" : "static var activeInstance: (any Chat)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmanager\/instance",
                "title" : "static var instance: ChatManager",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatmanager\/switchtouser(userid:)",
                "title" : "class func switchToUser(userId: Int)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/chatmanager",
            "title" : "ChatManager",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/freediskspace",
                "title" : "class var freeDiskSpace: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/freediskspaceinbytes",
                "title" : "class var freeDiskSpaceInBytes: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/totaldiskspace",
                "title" : "class var totalDiskSpace: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/totaldiskspaceinbytes",
                "title" : "class var totalDiskSpaceInBytes: Int64",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/useddiskspace",
                "title" : "class var usedDiskSpace: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/useddiskspaceinbytes",
                "title" : "class var usedDiskSpaceInBytes: Int64",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/gbformatter(_:)",
                "title" : "class func GBFormatter(Int64) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/diskstatus\/mbformatter(_:)",
                "title" : "class func MBFormatter(Int64) -> String",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/diskstatus",
            "title" : "DiskStatus",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/inmemoryreaction\/currentreaction(_:)",
                "title" : "func currentReaction(Int) -> Reaction?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/inmemoryreaction\/invalidate()",
                "title" : "func invalidate()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/inmemoryreaction\/summary(for:)",
                "title" : "func summary(for: Int) -> [ReactionCount]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/inmemoryreaction",
            "title" : "InMemoryReaction",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/messageinmemoryreaction\/init(messageid:)",
                "title" : "init(messageId: Int)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/messageinmemoryreaction\/addorreplacesummarycount(sticker:)",
                "title" : "func addOrReplaceSummaryCount(sticker: Sticker)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageinmemoryreaction\/appendorreplacedetail(reactions:)",
                "title" : "func appendOrReplaceDetail(reactions: [Reaction])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageinmemoryreaction\/deletesummarycount(sticker:)",
                "title" : "func deleteSummaryCount(sticker: Sticker)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/messageinmemoryreaction",
            "title" : "MessageInMemoryReaction",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/block(_:)",
                "title" : "func block(BlockUnblockAssistantRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/blockedlist(_:)",
                "title" : "func blockedList(BlockedAssistantsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/deactive(_:)",
                "title" : "func deactive(DeactiveAssistantRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/get(_:)",
                "title" : "func get(AssistantsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/history(_:)",
                "title" : "func history(AssistantsHistoryRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/register(_:)",
                "title" : "func register(RegisterAssistantsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/assistantprotocol\/unblock(_:)",
                "title" : "func unblock(BlockUnblockAssistantRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/assistantprotocol",
            "title" : "AssistantProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/botprotocol\/add(_:)",
                "title" : "func add(AddBotCommandRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/botprotocol\/create(_:)",
                "title" : "func create(CreateBotRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/botprotocol\/get(_:)",
                "title" : "func get(GetUserBotsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/botprotocol\/remove(_:)",
                "title" : "func remove(RemoveBotCommandRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/botprotocol\/start(_:)",
                "title" : "func start(StartStopBotRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/botprotocol\/stop(_:)",
                "title" : "func stop(StartStopBotRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/botprotocol",
            "title" : "BotProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/callmessageprotocol\/oncallmessagedelegate(asyncmessage:chat:)",
                "title" : "func onCallMessageDelegate(asyncMessage: AsyncMessage, chat: ChatImplementation)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/callmessageprotocol",
            "title" : "CallMessageProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/asyncmanager",
                "title" : "var asyncManager: AsyncManager",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/bantimer",
                "title" : "var banTimer: any TimerProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/cache",
                "title" : "var cache: CacheManager?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/cachefilemanager",
                "title" : "var cacheFileManager: (any CacheFileManagerProtocol)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/callmessagedeleaget",
                "title" : "var callMessageDeleaget: (any CallMessageProtocol)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/coordinator",
                "title" : "var coordinator: ChatCoordinator",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/exportmessageviewmodels",
                "title" : "var exportMessageViewModels: [any ExportMessagesProtocol]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/logger",
                "title" : "var logger: Logger",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/loggeruserinfo",
                "title" : "var loggerUserInfo: [String : String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/session",
                "title" : "var session: any URLSessionProtocol",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/userinfo",
                "title" : "var userInfo: User?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/dispose()",
                "title" : "func dispose()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/invokecallback(asyncmessage:)",
                "title" : "func invokeCallback(asyncMessage: AsyncMessage)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/chatinternalprotocol\/preparetosendasync(req:type:)",
                "title" : "func prepareToSendAsync(req: any ChatSendable, type: ChatMessageVOTypes)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/chatinternalprotocol",
            "title" : "ChatInternalProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/add(_:)",
                "title" : "func add(AddContactRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/addall(_:)",
                "title" : "func addAll([AddContactRequest])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/block(_:)",
                "title" : "func block(BlockRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/get(_:)",
                "title" : "func get(ContactsRequest)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/chat\/contactprotocol\/getblockedlist(_:)-8zfnl",
                        "title" : "func getBlockedList(BlockedListRequest)",
                        "type" : "method"
                      }
                    ],
                    "title" : "ContactProtocol Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/chat\/contactprotocol\/getblockedlist(_:)-3duud",
                "title" : "func getBlockedList(BlockedListRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/notseen(_:)",
                "title" : "func notSeen(NotSeenDurationRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/remove(_:)",
                "title" : "func remove(RemoveContactsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/search(_:)",
                "title" : "func search(ContactsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/sync()",
                "title" : "func sync()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/contactprotocol\/unblock(_:)",
                "title" : "func unBlock(UnBlockRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/contactprotocol",
            "title" : "ContactProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/chat",
                "title" : "var chat: ChatImplementation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/filemanager",
                "title" : "var fileManager: FileManager",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/filename",
                "title" : "var fileName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/filepath",
                "title" : "var filePath: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/maxavailablecount",
                "title" : "var maxAvailableCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/maxsize",
                "title" : "var maxSize: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/request",
                "title" : "var request: GetHistoryRequest",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/rootpath",
                "title" : "var rootPath: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/threadid",
                "title" : "var threadId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/titles",
                "title" : "var titles: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/addmessagestofile(_:)",
                "title" : "func addMessagesToFile([Message])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/convertmessagetostringrow(_:)",
                "title" : "func convertMessageToStringRow(Message) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/createfile()",
                "title" : "func createFile()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/deletefileifexist()",
                "title" : "func deleteFileIfExist()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/finished(success:uniqueid:error:typecode:)",
                "title" : "func finished(success: Bool, uniqueId: String?, error: ChatError?, typeCode: String?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/hasnext(response:)",
                "title" : "func hasNext(response: ChatResponse<[Message]>) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/onreceive(_:)",
                "title" : "func onReceive(ChatResponse<[Message]>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/sanitize(_:)",
                "title" : "func sanitize(String) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/setnextoffest()",
                "title" : "func setNextOffest()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/start()",
                "title" : "func start()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/exportmessagesprotocol\/writetofile(_:)",
                "title" : "func writeToFile(Data?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/exportmessagesprotocol",
            "title" : "ExportMessagesProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/deletecachefile(_:)",
                "title" : "func deleteCacheFile(URL)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/filepath(_:)",
                "title" : "func filePath(URL) -> URL?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/filepathingroup(_:)",
                "title" : "func filePathInGroup(URL) -> URL?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/get(_:)-4v4sz",
                "title" : "func get(ImageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/get(_:)-9ru7k",
                "title" : "func get(FileRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/getdata(_:completion:)",
                "title" : "func getData(URL, completion: (Data?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/getdataingroup(_:completion:)",
                "title" : "func getDataInGroup(URL, completion: (Data?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/isfileexist(_:)",
                "title" : "func isFileExist(URL) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/isfileexistingroup(_:)",
                "title" : "func isFileExistInGroup(URL) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/managedownload(uniqueid:action:)",
                "title" : "func manageDownload(uniqueId: String, action: DownloaUploadAction)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/manageupload(uniqueid:action:)",
                "title" : "func manageUpload(uniqueId: String, action: DownloaUploadAction)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/savefile(url:data:completion:)",
                "title" : "func saveFile(url: URL, data: Data, completion: (URL?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/savefileingroup(url:data:completion:)",
                "title" : "func saveFileInGroup(url: URL, data: Data, completion: (URL?) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/upload(_:)-1sy1h",
                "title" : "func upload(UploadFileRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/fileprotocol\/upload(_:)-7rq44",
                "title" : "func upload(UploadImageRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/fileprotocol",
            "title" : "FileProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/inmemoryreactionprotocol\/currentreaction(_:)",
                "title" : "func currentReaction(Int) -> Reaction?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/inmemoryreactionprotocol\/summary(for:)",
                "title" : "func summary(for: Int) -> [ReactionCount]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/inmemoryreactionprotocol",
            "title" : "InMemoryReactionProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/mapprotocol\/image(_:)",
                "title" : "func image(MapStaticImageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/mapprotocol\/reverse(_:)",
                "title" : "func reverse(MapReverseRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/mapprotocol\/routes(_:)",
                "title" : "func routes(MapRoutingRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/mapprotocol\/search(_:)",
                "title" : "func search(MapSearchRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/mapprotocol",
            "title" : "MapProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/cancel(uniqueid:)",
                "title" : "func cancel(uniqueId: String)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/clear(_:)",
                "title" : "func clear(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/delete(_:)-2gdjl",
                "title" : "func delete(BatchDeleteMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/delete(_:)-8n143",
                "title" : "func delete(DeleteMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/deliver(_:)",
                "title" : "func deliver(MessageDeliverRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/deliveredtoparricipants(_:)",
                "title" : "func deliveredToParricipants(MessageDeliveredUsersRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/edit(_:)",
                "title" : "func edit(EditMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/export(_:)",
                "title" : "func export(GetHistoryRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/history(_:)",
                "title" : "func history(GetHistoryRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/mentions(_:)",
                "title" : "func mentions(MentionRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/pin(_:)",
                "title" : "func pin(PinUnpinMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/reply(_:)",
                "title" : "func reply(ReplyMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/reply(_:_:)-2u63z",
                "title" : "func reply(ReplyMessageRequest, UploadImageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/reply(_:_:)-4dbh6",
                "title" : "func reply(ReplyMessageRequest, UploadFileRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/replyprivately(_:)",
                "title" : "func replyPrivately(ReplyPrivatelyRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/replyprivately(_:_:)-4gy8j",
                "title" : "func replyPrivately(ReplyPrivatelyRequest, UploadImageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/replyprivately(_:_:)-ypx2",
                "title" : "func replyPrivately(ReplyPrivatelyRequest, UploadFileRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/seen(_:)",
                "title" : "func seen(MessageSeenRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/seenbyparticipants(_:)",
                "title" : "func seenByParticipants(MessageSeenByUsersRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/send(_:)-84dd1",
                "title" : "func send(ForwardMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/send(_:)-8kz5t",
                "title" : "func send(SendTextMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/send(_:)-8qr0z",
                "title" : "func send(LocationMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/send(_:_:)-8yv5f",
                "title" : "func send(SendTextMessageRequest, UploadImageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/send(_:_:)-s0vu",
                "title" : "func send(SendTextMessageRequest, UploadFileRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/unpin(_:)",
                "title" : "func unpin(PinUnpinMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/unsenteditmessages(_:)",
                "title" : "func unsentEditMessages(GetHistoryRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/unsentfilemessages(_:)",
                "title" : "func unsentFileMessages(GetHistoryRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/unsentforwardmessages(_:)",
                "title" : "func unsentForwardMessages(GetHistoryRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/messageprotocol\/unsenttextmessages(_:)",
                "title" : "func unsentTextMessages(GetHistoryRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/messageprotocol",
            "title" : "MessageProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/participantprotocol\/add(_:)",
                "title" : "func add(AddParticipantRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/participantprotocol\/addadminrole(_:)",
                "title" : "func addAdminRole(AdminRoleRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/participantprotocol\/get(_:)",
                "title" : "func get(ThreadParticipantRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/participantprotocol\/remove(_:)",
                "title" : "func remove(RemoveParticipantRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/participantprotocol\/removeadminrole(_:)",
                "title" : "func removeAdminRole(AdminRoleRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/participantprotocol",
            "title" : "ParticipantProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/inmemoryreaction",
                "title" : "var inMemoryReaction: any InMemoryReactionProtocol",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/add(_:)",
                "title" : "func add(AddReactionRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/allowedreactions(_:)",
                "title" : "func allowedReactions(ConversationAllowedReactionsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/count(_:)",
                "title" : "func count(ReactionCountRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/customizereactions(_:)",
                "title" : "func customizeReactions(ConversationCustomizeReactionsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/delete(_:)",
                "title" : "func delete(DeleteReactionRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/get(_:)",
                "title" : "func get(ReactionListRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/reaction(_:)",
                "title" : "func reaction(UserReactionRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/reactionprotocol\/replace(_:)",
                "title" : "func replace(ReplaceReactionRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/reactionprotocol",
            "title" : "ReactionProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/systemprotocol\/sendsignalmessage(_:)",
                "title" : "func sendSignalMessage(SendSignalMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/systemprotocol\/sendstarttyping(threadid:)",
                "title" : "func sendStartTyping(threadId: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/systemprotocol\/sendstoptyping()",
                "title" : "func sendStopTyping()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/systemprotocol",
            "title" : "SystemProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/add(_:)",
                "title" : "func add(AddTagParticipantsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/all()",
                "title" : "func all()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/create(_:)",
                "title" : "func create(CreateTagRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/delete(_:)",
                "title" : "func delete(DeleteTagRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/edit(_:)",
                "title" : "func edit(EditTagRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/participants(_:)",
                "title" : "func participants(GetTagParticipantsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/tagprotocol\/remove(_:)",
                "title" : "func remove(RemoveTagParticipantsRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/tagprotocol",
            "title" : "TagProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/participant",
                "title" : "var participant: any ParticipantProtocol",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/allunreadcount(_:)",
                "title" : "func allUnreadCount(AllThreadsUnreadCountRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/archive(_:)",
                "title" : "func archive(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/changetype(_:)",
                "title" : "func changeType(ChangeThreadTypeRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/close(_:)",
                "title" : "func close(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/create(_:)-3epo",
                "title" : "func create(CreateThreadWithMessage)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/create(_:)-64b7s",
                "title" : "func create(CreateThreadRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/create(_:_:)",
                "title" : "func create(CreateThreadRequest, SendTextMessageRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/delete(_:)",
                "title" : "func delete(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/get(_:)",
                "title" : "func get(ThreadsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/isnameavailable(_:)",
                "title" : "func isNameAvailable(IsThreadNamePublicRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/join(_:)",
                "title" : "func join(JoinPublicThreadRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/lastaction(_:)",
                "title" : "func lastAction(LastActionInConversationRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/leave(_:)",
                "title" : "func leave(LeaveThreadRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/leavesafely(_:)",
                "title" : "func leaveSafely(SafeLeaveThreadRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/mute(_:)",
                "title" : "func mute(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/mutual(_:)",
                "title" : "func mutual(MutualGroupsRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/pin(_:)",
                "title" : "func pin(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/spam(_:)",
                "title" : "func spam(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/unarchive(_:)",
                "title" : "func unarchive(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/unmute(_:)",
                "title" : "func unmute(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/unpin(_:)",
                "title" : "func unpin(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/unreadcount(_:)",
                "title" : "func unreadCount(ThreadsUnreadCountRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/threadprotocol\/updateinfo(_:)",
                "title" : "func updateInfo(UpdateThreadInfoRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/threadprotocol",
            "title" : "ThreadProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/currentuserroles(_:)",
                "title" : "func currentUserRoles(GeneralSubjectIdRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/logout()",
                "title" : "func logOut()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/remove(_:)-63xy3",
                "title" : "func remove(AuditorRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/remove(_:)-71zsk",
                "title" : "func remove(RolesRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/send(_:)",
                "title" : "func send(SendStatusPingRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/set(_:)-1qwkb",
                "title" : "func set(AuditorRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/set(_:)-6o86f",
                "title" : "func set(UpdateChatProfile)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/set(_:)-9f5h7",
                "title" : "func set(RolesRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/userprotocol\/userinfo(_:)",
                "title" : "func userInfo(UserInfoRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/userprotocol",
            "title" : "UserProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/webrtcclientdelegate\/didconnectwebrtc()",
                "title" : "func didConnectWebRTC()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/webrtcclientdelegate\/diddisconnectwebrtc()",
                "title" : "func didDisconnectWebRTC()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/webrtcclientdelegate\/didiceconnectionstatechanged(iceconnectionstate:)",
                "title" : "func didIceConnectionStateChanged(iceConnectionState: IceConnectionState)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/webrtcclientdelegate\/didreceivedata(data:)",
                "title" : "func didReceiveData(data: Data)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/chat\/webrtcclientdelegate\/didreceivemessage(message:)",
                "title" : "func didReceiveMessage(message: String)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/chat\/webrtcclientdelegate",
            "title" : "WebRTCClientDelegate",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/code",
                "title" : "var code: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/content",
                "title" : "let content: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/contentcount",
                "title" : "let contentCount: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/message",
                "title" : "var message: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/messageid",
                "title" : "var messageId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/messagetype",
                "title" : "let messageType: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/participantid",
                "title" : "var participantId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/subjectid",
                "title" : "let subjectId: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/time",
                "title" : "let time: Int?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/type",
                "title" : "let type: ChatMessageVOTypes",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/typecode",
                "title" : "var typeCode: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/chatmessage\/uniqueid",
                "title" : "let uniqueId: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/chat\/chatmessage",
            "title" : "ChatMessage",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/deviceinfo\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/data",
                    "title" : "var data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/dataprettyprint",
                    "title" : "var dataPrettyPrint: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/jsonstring",
                    "title" : "var jsonString: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/parameterdata",
                    "title" : "var parameterData: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/asdictionary()",
                    "title" : "func asDictionary() throws -> [String : Any]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/deviceinfo\/asdictionarynuallable()",
                    "title" : "func asDictionaryNuallable() throws -> [String : Any?]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/deviceinfo\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/deviceinfo",
            "title" : "DeviceInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/reactioninmemorycopy\/init(messageid:currentuserreaction:summary:details:)",
                "title" : "init(messageId: Int, currentUserReaction: Reaction?, summary: [ReactionCount], details: [Reaction])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/reactioninmemorycopy\/currentuserreaction",
                "title" : "var currentUserReaction: Reaction?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/reactioninmemorycopy\/details",
                "title" : "var details: [Reaction]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/reactioninmemorycopy\/messageid",
                "title" : "let messageId: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/chat\/reactioninmemorycopy\/summary",
                "title" : "var summary: [ReactionCount]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/chat\/reactioninmemorycopy",
            "title" : "ReactionInMemoryCopy",
            "type" : "struct"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/chat\/cacheresponsetype",
            "title" : "CacheResponseType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/completiontype",
            "title" : "CompletionType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/completiontypenonedecodeable",
            "title" : "CompletionTypeNoneDecodeable",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/completiontypewithoutuniqueid",
            "title" : "CompletionTypeWithoutUniqueId",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/ondeliverytype",
            "title" : "OnDeliveryType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/onseentype",
            "title" : "OnSeenType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/onsenttype",
            "title" : "OnSentType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/uniqueidresulttype",
            "title" : "UniqueIdResultType",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/chat\/uniqueidsresulttype",
            "title" : "UniqueIdsResultType",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/actions(_:)",
                "title" : "case actions(ChatResponse<[AssistantAction]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/assistants(_:)",
                "title" : "case assistants(ChatResponse<[Assistant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/block(_:)",
                "title" : "case block(ChatResponse<[Assistant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/blockedlist(_:)",
                "title" : "case blockedList(ChatResponse<[Assistant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/deactive(_:)",
                "title" : "case deactive(ChatResponse<[Assistant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/register(_:)",
                "title" : "case register(ChatResponse<[Assistant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/assistanteventtypes\/unblock(_:)",
                "title" : "case unblock(ChatResponse<[Assistant]>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/assistanteventtypes",
            "title" : "AssistantEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/addcommand(_:)",
                "title" : "case addCommand(ChatResponse<BotInfo>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/bots(_:)",
                "title" : "case bots(ChatResponse<[BotInfo]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/create(_:)",
                "title" : "case create(ChatResponse<BotInfo>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/message(_:)",
                "title" : "case message(ChatResponse<String?>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/removecommand(_:)",
                "title" : "case removeCommand(ChatResponse<BotInfo>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/start(_:)",
                "title" : "case start(ChatResponse<String>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/boteventtypes\/stop(_:)",
                "title" : "case stop(ChatResponse<String>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/boteventtypes",
            "title" : "BotEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callcanceled(_:)",
                "title" : "case callCanceled(ChatResponse<Call>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callclienterror(_:)",
                "title" : "case callClientError(ChatResponse<CallError>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callcreate(_:)",
                "title" : "case callCreate(ChatResponse<CreateCall>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/calldelivered(_:)",
                "title" : "case callDelivered(ChatResponse<Call>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callended(_:)",
                "title" : "case callEnded(ChatResponse<Int>?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantjoined(_:)",
                "title" : "case callParticipantJoined(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantleft(_:)",
                "title" : "case callParticipantLeft(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantmute(_:)",
                "title" : "case callParticipantMute(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantstartspeaking(_:)",
                "title" : "case callParticipantStartSpeaking(ChatResponse<CallParticipant>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantstopspeaking(_:)",
                "title" : "case callParticipantStopSpeaking(ChatResponse<CallParticipant>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantunmute(_:)",
                "title" : "case callParticipantUnmute(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callparticipantsremoved(_:)",
                "title" : "case callParticipantsRemoved(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callreceived(_:)",
                "title" : "case callReceived(ChatResponse<CreateCall>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callrejected(_:)",
                "title" : "case callRejected(ChatResponse<CreateCall>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callstarted(_:)",
                "title" : "case callStarted(ChatResponse<StartCall>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/callstojoin(_:)",
                "title" : "case callsToJoin(ChatResponse<[Call]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/groupcallcanceled(_:)",
                "title" : "case groupCallCanceled(ChatResponse<CancelGroupCall>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/maxvideosessionlimit(_:)",
                "title" : "case maxVideoSessionLimit(ChatResponse<CallParticipant>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/startcallrecording(_:)",
                "title" : "case startCallRecording(ChatResponse<Participant>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/sticker(_:)",
                "title" : "case sticker(ChatResponse<StickerResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/stopcallrecording(_:)",
                "title" : "case stopCallRecording(ChatResponse<Participant>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/turnvideooff(_:)",
                "title" : "case turnVideoOff(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/calleventtypes\/turnvideoon(_:)",
                "title" : "case turnVideoOn(ChatResponse<[CallParticipant]>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/calleventtypes",
            "title" : "CallEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/assistant(_:)",
                "title" : "case assistant(AssistantEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/bot(_:)",
                "title" : "case bot(BotEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/call(_:)",
                "title" : "case call(CallEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/contact(_:)",
                "title" : "case contact(ContactEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/download(_:)",
                "title" : "case download(DownloadEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/map(_:)",
                "title" : "case map(MapEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/message(_:)",
                "title" : "case message(MessageEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/participant(_:)",
                "title" : "case participant(ParticipantEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/reaction(_:)",
                "title" : "case reaction(ReactionEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/system(_:)",
                "title" : "case system(SystemEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/tag(_:)",
                "title" : "case tag(TagEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/thread(_:)",
                "title" : "case thread(ThreadEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/upload(_:)",
                "title" : "case upload(UploadEventTypes)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/chateventtype\/user(_:)",
                "title" : "case user(UserEventTypes)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/chateventtype",
            "title" : "ChatEventType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/add(_:)",
                "title" : "case add(ChatResponse<[Contact]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/blocked(_:)",
                "title" : "case blocked(ChatResponse<BlockedContactResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/blockedlist(_:)",
                "title" : "case blockedList(ChatResponse<[BlockedContactResponse]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/contacts(_:)",
                "title" : "case contacts(ChatResponse<[Contact]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/contactslastseen(_:)",
                "title" : "case contactsLastSeen(ChatResponse<[UserLastSeenDuration]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/delete(_:deleted:)",
                "title" : "case delete(ChatResponse<[Contact]>, deleted: Bool)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/notseen(_:)",
                "title" : "case notSeen(ChatResponse<[ContactNotSeenDurationRespoonse]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/synced(_:)",
                "title" : "case synced(ChatResponse<ChatMessage>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/contacteventtypes\/unblocked(_:)",
                "title" : "case unblocked(ChatResponse<BlockedContactResponse>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/contacteventtypes",
            "title" : "ContactEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/downloauploadaction\/cancel",
                "title" : "case cancel",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloauploadaction\/resume",
                "title" : "case resume",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloauploadaction\/suspend",
                "title" : "case suspend",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/downloauploadaction\/id",
                "title" : "var id: DownloaUploadAction",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/downloauploadaction\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/chat\/downloauploadaction\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/downloauploadaction",
            "title" : "DownloaUploadAction",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/canceled(uniqueid:)",
                "title" : "case canceled(uniqueId: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/failed(uniqueid:error:)",
                "title" : "case failed(uniqueId: String, error: ChatError?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/file(_:_:)",
                "title" : "case file(ChatResponse<Data>, URL?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/image(_:_:)",
                "title" : "case image(ChatResponse<Data>, URL?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/progress(uniqueid:progress:)",
                "title" : "case progress(uniqueId: String, progress: DownloadFileProgress?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/resumed(uniqueid:)",
                "title" : "case resumed(uniqueId: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/downloadeventtypes\/suspended(uniqueid:)",
                "title" : "case suspended(uniqueId: String)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/downloadeventtypes",
            "title" : "DownloadEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/checking",
                "title" : "case checking",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/closed",
                "title" : "case closed",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/completed",
                "title" : "case completed",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/connected",
                "title" : "case connected",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/count",
                "title" : "case count",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/disconnected",
                "title" : "case disconnected",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/failed",
                "title" : "case failed",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/new",
                "title" : "case new",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/chat\/iceconnectionstate\/init(rawvalue:)",
                "title" : "init(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/data",
                    "title" : "var data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/dataprettyprint",
                    "title" : "var dataPrettyPrint: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/jsonstring",
                    "title" : "var jsonString: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/parameterdata",
                    "title" : "var parameterData: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/asdictionary()",
                    "title" : "func asDictionary() throws -> [String : Any]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/asdictionarynuallable()",
                    "title" : "func asDictionaryNuallable() throws -> [String : Any?]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/iceconnectionstate\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/iceconnectionstate\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/chat\/iceconnectionstate\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/iceconnectionstate",
            "title" : "IceConnectionState",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/icegatheringstate\/complete",
                "title" : "case complete",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/icegatheringstate\/gathering",
                "title" : "case gathering",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/icegatheringstate\/new",
                "title" : "case new",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/icegatheringstate\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/icegatheringstate\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/chat\/icegatheringstate\/init(rawvalue:)",
                "title" : "init(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/data",
                    "title" : "var data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/dataprettyprint",
                    "title" : "var dataPrettyPrint: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/jsonstring",
                    "title" : "var jsonString: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/parameterdata",
                    "title" : "var parameterData: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/asdictionary()",
                    "title" : "func asDictionary() throws -> [String : Any]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/asdictionarynuallable()",
                    "title" : "func asDictionaryNuallable() throws -> [String : Any?]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/icegatheringstate\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/icegatheringstate\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/chat\/icegatheringstate\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/icegatheringstate",
            "title" : "IceGatheringState",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/mapeventtypes\/image(_:)",
                "title" : "case image(ChatResponse<Data>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/mapeventtypes\/reverse(_:)",
                "title" : "case reverse(ChatResponse<MapReverse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/mapeventtypes\/routes(_:)",
                "title" : "case routes(ChatResponse<[Route]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/mapeventtypes\/search(_:)",
                "title" : "case search(ChatResponse<[MapItem]>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/mapeventtypes",
            "title" : "MapEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/cleared(_:)",
                "title" : "case cleared(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/deleted(_:)",
                "title" : "case deleted(ChatResponse<Message>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/delivered(_:)",
                "title" : "case delivered(ChatResponse<MessageResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/deliveredtoparticipants(_:)",
                "title" : "case deliveredToParticipants(ChatResponse<[Participant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/edited(_:)",
                "title" : "case edited(ChatResponse<Message>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/export(_:)",
                "title" : "case export(ChatResponse<URL>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/history(_:)",
                "title" : "case history(ChatResponse<[Message]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/messages(_:)",
                "title" : "case messages(ChatResponse<[Message]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/new(_:)",
                "title" : "case new(ChatResponse<Message>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/pin(_:)",
                "title" : "case pin(ChatResponse<PinMessage>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/queueeditmessages(_:)",
                "title" : "case queueEditMessages(ChatResponse<[EditMessageRequest]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/queuefilemessages(_:)",
                "title" : "case queueFileMessages(ChatResponse<[(UploadFileRequest, SendTextMessageRequest)]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/queueforwardmessages(_:)",
                "title" : "case queueForwardMessages(ChatResponse<[ForwardMessageRequest]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/queuetextmessages(_:)",
                "title" : "case queueTextMessages(ChatResponse<[SendTextMessageRequest]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/seen(_:)",
                "title" : "case seen(ChatResponse<MessageResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/seenbyparticipants(_:)",
                "title" : "case seenByParticipants(ChatResponse<[Participant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/sent(_:)",
                "title" : "case sent(ChatResponse<MessageResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/messageeventtypes\/unpin(_:)",
                "title" : "case unpin(ChatResponse<PinMessage>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/messageeventtypes",
            "title" : "MessageEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/participanteventtypes\/add(_:)",
                "title" : "case add(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/participanteventtypes\/deleted(_:)",
                "title" : "case deleted(ChatResponse<[Participant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/participanteventtypes\/participants(_:)",
                "title" : "case participants(ChatResponse<[Participant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/participanteventtypes\/removeadminrolefromuser(_:)",
                "title" : "case removeAdminRoleFromUser(ChatResponse<[AdminRoleResponse]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/participanteventtypes\/setadminroletouser(_:)",
                "title" : "case setAdminRoleToUser(ChatResponse<[AdminRoleResponse]>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/participanteventtypes",
            "title" : "ParticipantEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/closed",
                "title" : "case closed",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/connected",
                "title" : "case connected",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/connecting",
                "title" : "case connecting",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/disconnected",
                "title" : "case disconnected",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/failed",
                "title" : "case failed",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/new",
                "title" : "case new",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/chat\/peerconnectionstate\/init(rawvalue:)",
                "title" : "init(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/data",
                    "title" : "var data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/dataprettyprint",
                    "title" : "var dataPrettyPrint: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/jsonstring",
                    "title" : "var jsonString: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/parameterdata",
                    "title" : "var parameterData: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/asdictionary()",
                    "title" : "func asDictionary() throws -> [String : Any]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/asdictionarynuallable()",
                    "title" : "func asDictionaryNuallable() throws -> [String : Any?]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/peerconnectionstate\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/peerconnectionstate\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/chat\/peerconnectionstate\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/peerconnectionstate",
            "title" : "PeerConnectionState",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/add(_:)",
                "title" : "case add(ChatResponse<ReactionMessageResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/allowedreactions(_:)",
                "title" : "case allowedReactions(ChatResponse<AllowedReactionsResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/count(_:)",
                "title" : "case count(ChatResponse<[ReactionCountList]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/customizereactions(_:)",
                "title" : "case customizeReactions(ChatResponse<CustomizeReactionsResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/delete(_:)",
                "title" : "case delete(ChatResponse<ReactionMessageResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/inmemoryupdate(messages:)",
                "title" : "case inMemoryUpdate(messages: [ReactionInMemoryCopy])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/list(_:)",
                "title" : "case list(ChatResponse<ReactionList>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/reaction(_:)",
                "title" : "case reaction(ChatResponse<CurrentUserReaction>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/reactioneventtypes\/replace(_:)",
                "title" : "case replace(ChatResponse<ReactionMessageResponse>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/reactioneventtypes",
            "title" : "ReactionEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/closed",
                "title" : "case closed",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/havelocaloffer",
                "title" : "case haveLocalOffer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/havelocalpranswer",
                "title" : "case haveLocalPrAnswer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/haveremoteoffer",
                "title" : "case haveRemoteOffer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/haveremotepranswer",
                "title" : "case haveRemotePrAnswer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/stable",
                "title" : "case stable",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/chat\/signalingstate\/init(rawvalue:)",
                "title" : "init(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/data",
                    "title" : "var data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/dataprettyprint",
                    "title" : "var dataPrettyPrint: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/jsonstring",
                    "title" : "var jsonString: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/parameterdata",
                    "title" : "var parameterData: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/string",
                    "title" : "var string: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/asdictionary()",
                    "title" : "func asDictionary() throws -> [String : Any]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/asdictionarynuallable()",
                    "title" : "func asDictionaryNuallable() throws -> [String : Any?]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/signalingstate\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/signalingstate\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/chat\/signalingstate\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/chat\/signalingstate",
            "title" : "SignalingState",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/systemeventtypes\/error(_:)",
                "title" : "case error(ChatResponse<Any>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/systemeventtypes\/servertime(_:)",
                "title" : "case serverTime(ChatResponse<Int?>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/systemeventtypes\/systemmessage(_:)",
                "title" : "case systemMessage(ChatResponse<SystemEventMessageModel>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/systemeventtypes",
            "title" : "SystemEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/added(_:)",
                "title" : "case added(ChatResponse<[TagParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/created(_:)",
                "title" : "case created(ChatResponse<Tag>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/deleted(_:)",
                "title" : "case deleted(ChatResponse<Tag>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/edited(_:)",
                "title" : "case edited(ChatResponse<Tag>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/participants(_:)",
                "title" : "case participants(ChatResponse<[TagParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/removed(_:)",
                "title" : "case removed(ChatResponse<[TagParticipant]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/tageventtypes\/tags(_:)",
                "title" : "case tags(ChatResponse<[Tag]>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/tageventtypes",
            "title" : "TagEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/allunreadcount(_:)",
                "title" : "case allUnreadCount(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/archive(_:)",
                "title" : "case archive(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/changedtype(_:)",
                "title" : "case changedType(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/closed(_:)",
                "title" : "case closed(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/created(_:)",
                "title" : "case created(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/deleted(_:)",
                "title" : "case deleted(ChatResponse<Participant>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/isnameavailable(_:)",
                "title" : "case isNameAvailable(ChatResponse<PublicThreadNameAvailableResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/joined(_:)",
                "title" : "case joined(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/lastactions(_:)",
                "title" : "case lastActions(ChatResponse<[LastActionInConversation]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/lastmessagedeleted(_:)",
                "title" : "case lastMessageDeleted(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/lastmessageedited(_:)",
                "title" : "case lastMessageEdited(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/lastseenmessageupdated(_:)",
                "title" : "case lastSeenMessageUpdated(ChatResponse<LastSeenMessageResponse>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/left(_:)",
                "title" : "case left(ChatResponse<User>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/mute(_:)",
                "title" : "case mute(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/mutual(_:)",
                "title" : "case mutual(ChatResponse<[Conversation]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/pin(_:)",
                "title" : "case pin(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/spammed(_:)",
                "title" : "case spammed(ChatResponse<Contact>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/threads(_:)",
                "title" : "case threads(ChatResponse<[Conversation]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/unarchive(_:)",
                "title" : "case unArchive(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/unmute(_:)",
                "title" : "case unmute(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/unpin(_:)",
                "title" : "case unpin(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/unreadcount(_:)",
                "title" : "case unreadCount(ChatResponse<[String : Int]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/updatedinfo(_:)",
                "title" : "case updatedInfo(ChatResponse<Conversation>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/userremoveformthread(_:)",
                "title" : "case userRemoveFormThread(ChatResponse<Int>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/threadeventtypes\/userroles(_:)",
                "title" : "case userRoles(ChatResponse<[UserRole]>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/threadeventtypes",
            "title" : "ThreadEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/uploadeventtypes\/canceled(uniqueid:)",
                "title" : "case canceled(uniqueId: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/uploadeventtypes\/completed(uniqueid:filemetadata:data:error:)",
                "title" : "case completed(uniqueId: String, fileMetaData: FileMetaData?, data: Data?, error: (any Error)?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/uploadeventtypes\/failed(uniqueid:error:)",
                "title" : "case failed(uniqueId: String, error: ChatError?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/uploadeventtypes\/progress(_:_:)",
                "title" : "case progress(String, UploadFileProgress?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/uploadeventtypes\/resumed(uniqueid:)",
                "title" : "case resumed(uniqueId: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/uploadeventtypes\/suspended(uniqueid:)",
                "title" : "case suspended(uniqueId: String)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/uploadeventtypes",
            "title" : "UploadEventTypes",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/chat\/usereventtypes\/currentuserroles(_:)",
                "title" : "case currentUserRoles(ChatResponse<[Roles]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/usereventtypes\/remove(_:)",
                "title" : "case remove(ChatResponse<[UserRole]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/usereventtypes\/setprofile(_:)",
                "title" : "case setProfile(ChatResponse<Profile>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/usereventtypes\/setrolestouser(_:)",
                "title" : "case setRolesToUser(ChatResponse<[UserRole]>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/chat\/usereventtypes\/user(_:)",
                "title" : "case user(ChatResponse<User>)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/chat\/usereventtypes",
            "title" : "UserEventTypes",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/async\/asyncmessage\/banerror",
                    "title" : "var banError: BanError?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/async\/asyncmessage\/chatmessage",
                    "title" : "var chatMessage: ChatMessage?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/chat\/async\/asyncmessage\/subjectid",
                    "title" : "var subjectId: Int?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/async\/asyncmessage\/messageresponse(state:)",
                    "title" : "func messageResponse(state: MessageResponseState) -> ChatResponse<MessageResponse>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/async\/asyncmessage\/tochatresponse()",
                    "title" : "func toChatResponse<T>() -> ChatResponse<T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/chat\/async\/asyncmessage\/tochatresponse(asyncmanager:)",
                    "title" : "func toChatResponse<T>(asyncManager: AsyncManager) -> ChatResponse<T>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/async\/asyncmessage",
                "title" : "AsyncMessage",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/chat\/async",
            "title" : "Async",
            "type" : "extension"
          },
          {
            "children" : [
              {
                "title" : "Extended Protocols",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/chatdto\/typecodeindexprotocol\/totypecode(_:)",
                    "title" : "func toTypeCode(any Chat) -> String?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/chatdto\/typecodeindexprotocol",
                "title" : "TypeCodeIndexProtocol",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/chat\/chatdto",
            "title" : "ChatDTO",
            "type" : "extension"
          },
          {
            "children" : [
              {
                "title" : "Extended Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/chat\/foundation\/filemanager\/allocatedsizeofdirectory(at:)",
                    "title" : "func allocatedSizeOfDirectory(at: URL) throws -> UInt64",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/chat\/foundation\/filemanager",
                "title" : "FileManager",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/chat\/foundation",
            "title" : "Foundation",
            "type" : "extension"
          }
        ],
        "icon" : "icon.png",
        "path" : "\/documentation\/chat",
        "title" : "Chat",
        "type" : "module"
      }
    ]
  },
  "references" : {
    "icon.png" : {
      "alt" : "App icon.",
      "identifier" : "icon.png",
      "type" : "image",
      "variants" : [
        {
          "traits" : [
            "1x",
            "light"
          ],
          "url" : "\/images\/Chat\/icon.png"
        }
      ]
    }
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}