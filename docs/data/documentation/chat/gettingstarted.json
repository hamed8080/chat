{
  "abstract" : [
    {
      "text" : "Getting started with the Chat SDK and some tips and tricks to configure it properly.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Chat\/documentation\/Chat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Chat\/documentation\/Chat\/GettingStarted"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Chat"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Getting Started"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "How to configure the Chat SDK to integrate with your application.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Configuration",
          "level" : 2,
          "text" : "Configuration",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To configure the Chat SDK you have got to provide an AsyncConfig along with a ChatConfig and pass the AsyncConfig as a parameter in the config builder as the figure shows:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The configuration for call and log is not required.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "code" : [
            "let callConfig = CallConfigBuilder()",
            "    .callTimeout(20)",
            "    .targetVideoWidth(640)",
            "    .targetVideoHeight(480)",
            "    .maxActiveVideoSessions(2)",
            "    .targetFPS(15)",
            "    .build()",
            "",
            "let asyncLoggerConfig = LoggerConfig(",
            "    prefix: \"ASYNC_SDK\",",
            "    logServerURL: \"LOG_SERVER_ADDRESS\",",
            "    logServerMethod: \"PUT\",",
            "    persistLogsOnServer: true,",
            "    isDebuggingLogEnabled: true,",
            "    logServerRequestheaders: [\"Authorization\": \"Basic \\(LOG_SERVER_TOKEN)\", \"Content-Type\": \"application\/json\"]",
            ")",
            "",
            "let chatLoggerConfig = LoggerConfig(",
            "    prefix: \"CHAT_SDK\",",
            "    logServerURL: \"LOG_SERVER_ADDRESS\",",
            "    logServerMethod: \"PUT\",",
            "    persistLogsOnServer: true,",
            "    isDebuggingLogEnabled: true,",
            "    logServerRequestheaders: [\"Authorization\": \"Basic \\(LOG_SERVER_TOKEN)\", \"Content-Type\": \"application\/json\"]",
            ")",
            "",
            "let asyncConfig = try! AsyncConfigBuilder()",
            "    .socketAddress(\"SOCKET_ADDRESS\")",
            "    .reconnectCount(Int.max)",
            "    .reconnectOnClose(true)",
            "    .appId(\"APP_ID\")",
            "    .peerName(\"PEER_NAME\")",
            "    .loggerConfig(asyncLoggerConfig)",
            "    .build()",
            "",
            "let chatConfig = ChatConfigBuilder(asyncConfig)",
            "    .callConfig(callConfig)",
            "    .token(\"SSO_TOKEN\")",
            "    .ssoHost(\"SSERVER_ADDRESS\")",
            "    .platformHost(\"CORE_PLATFORM_HOST_ADDRESS\")",
            "    .fileServer(\"FILE_SSERVER_ADDRESS\")",
            "    .enableCache(true)",
            "    .mapApiKey(\"NESHAN_API_TOKEN\")",
            "    .typeCodes([.init(typeCode: \"default\", ownerId: nil)])",
            "    .build()"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Listening-to-an-event",
          "level" : 2,
          "text" : "Listening to an event",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Chat SDK is not based on whether closures or completion handlers and notification, it is an event-based SDK.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "When you initiate a request you should listen to an event by a delegate that we provided for you like:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "final class ChatDelegateImplementation: ChatDelegate  {",
            "    func chatState(state: ChatState, currentUser: User?, error _: ChatError?) {",
            "        print(\"chat status: \\(state)\")",
            "    }",
            "",
            "    func chatEvent(event: ChatEventType) {",
            "        print(dump(event))",
            "        NotificationCenter.post(event: event)",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Each request you make implicitly generates a unique ID, and upon receiving a response from the Chat Server, you will get a corresponding unique ID.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "To distinguish responses as mentioned above, you need to use the unique ID. Keep in mind that there is a chance you might end up receiving more than one event from the Chat Server with the same unique ID.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "For the sake of brevity, we will not repeat the event types for the receive event delegate. You should know that there is a ThreadEventTypes enum where you can just receive the desired event.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Place the delegate in the initial lines of code in your application, and from there, post a notification to other parts of the system or use your own delegate mechanism.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Chat\/documentation\/Chat\/ManagingThreads",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingMessages",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingContacts",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingFiles",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingUsers",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingTags",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingBots",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingAssistants",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingMaps",
        "doc:\/\/Chat\/documentation\/Chat\/ErrorCodes"
      ],
      "title" : "Essentials"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/chat\/gettingstarted"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Chat/documentation/Chat": {
  "abstract" : [
    {
      "text" : "With Chat SDK you can connect to the chat server without managing the socket state and send or receive messages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat",
  "images" : [
    {
      "identifier" : "icon.png",
      "type" : "icon"
    }
  ],
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Chat",
  "type" : "topic",
  "url" : "\/documentation\/chat"
},
"doc://Chat/documentation/Chat/ErrorCodes": {
  "abstract" : [
    {
      "text" : "List of all error codes locally in the chat SDK for server errors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ErrorCodes",
  "kind" : "article",
  "role" : "article",
  "title" : "Error Codes",
  "type" : "topic",
  "url" : "\/documentation\/chat\/errorcodes"
},
"doc://Chat/documentation/Chat/ManagingAssistants": {
  "abstract" : [
    {
      "text" : "Adding a participant as an assistant.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingAssistants",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Assistants",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingassistants"
},
"doc://Chat/documentation/Chat/ManagingBots": {
  "abstract" : [
    {
      "text" : "For creating, add\/remove command, user bots, start\/stop.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingBots",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Bots",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingbots"
},
"doc://Chat/documentation/Chat/ManagingContacts": {
  "abstract" : [
    {
      "text" : "Managing contacts add, edit, delete, search, and more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingContacts",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Contacts",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingcontacts"
},
"doc://Chat/documentation/Chat/ManagingFiles": {
  "abstract" : [
    {
      "text" : "You could manage download and upload and so more in terms of working with files.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingFiles",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Files",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingfiles"
},
"doc://Chat/documentation/Chat/ManagingMaps": {
  "abstract" : [
    {
      "text" : "Converting lat, long to an address or searching through a map, or finding a route getting an image of lat, long.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingMaps",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Maps",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingmaps"
},
"doc://Chat/documentation/Chat/ManagingMessages": {
  "abstract" : [
    {
      "text" : "You could Add, delete, edit, reply, forward and so many more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingMessages",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Messages",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingmessages"
},
"doc://Chat/documentation/Chat/ManagingTags": {
  "abstract" : [
    {
      "text" : "Tags are like folder for managing threads. You could Add, delete, edit and add\/remove tag participans.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingTags",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Tags",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingtags"
},
"doc://Chat/documentation/Chat/ManagingThreads": {
  "abstract" : [
    {
      "text" : "Managing threads, create P2P, Group, Channel or delete edit and so many more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingThreads",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Threads",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingthreads"
},
"doc://Chat/documentation/Chat/ManagingUsers": {
  "abstract" : [
    {
      "text" : "Manage users such as get a list of roles and so more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingUsers",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Users",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingusers"
},
"icon.png": {
  "alt" : "App icon.",
  "identifier" : "icon.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/icon.png"
    }
  ]
}
}
}