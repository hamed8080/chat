{
  "abstract" : [
    {
      "text" : "You could Add, delete, edit, reply, forward and so many more.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Chat\/documentation\/Chat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Chat\/documentation\/Chat\/ManagingMessages"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Chat"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Managing Messages"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Message-States",
          "level" : 3,
          "text" : "Message States",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "message-flow.png",
              "type" : "image"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Each message has 5 phases to send to the opposite person or in a group thread.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Stage waiting to send it to the chat server but there isn’t any response yet, so the message just has a uniqueId, not an ",
                      "type" : "text"
                    },
                    {
                      "code" : "Message\/id",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "In this stage, the message is added to a queue in the cache with the power of ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "CoreData",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ", to live there for resending, if the message wasn’t sent to the server.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "In stage 3, the server receives the message and will respond with types ",
                      "type" : "text"
                    },
                    {
                      "code" : "ChatMessageVOTypes\/sent",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " and ",
                      "type" : "text"
                    },
                    {
                      "code" : "ChatMessageVOTypes\/message",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " at the same time.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "When another person receives the message, it should send the ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "deliver",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : " event to the sender, which is done behind the scene by the chat SDK.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "When another person opens the thread and sees the message, it should send a seen with type ",
                      "type" : "text"
                    },
                    {
                      "code" : "ChatMessageVOTypes\/seen",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " response to the sender.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "After a message has been sent to the server, it will be deleted automatically from the cache.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If the device is in runtime mode and the app wasn’t terminated by the user or OS a queue exists to resend messages automatically when chat SDK is in ",
                  "type" : "text"
                },
                {
                  "code" : "ChatState\/chatReady",
                  "type" : "codeVoice"
                },
                {
                  "text" : " state again, by two second time interval one by one.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "anchor" : "Send-Text-Message",
          "level" : 3,
          "text" : "Send Text Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To send a simple text message insisde a thread call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:)-8kz5t",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = SendTextMessageRequest(threadId: threadId, textMessage: \"Hello\", messageType: .TEXT)",
            "ChatManager.activeInstance?.message.send(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Send-a-file-message",
          "level" : 3,
          "text" : "Send a file message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To send a new message with uploading a file use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:_:)-s0vu",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let message = SendTextMessageRequest(threadId: 123456, textMessage: \"Use This File\", messageType: .POD_SPACE_FILE)",
            "let uploadFile = UploadFileRequest(data: fileData, fileExtension: \".txt\", fileName: \"Test\", mimeType: \"text\/plain\" , userGroupHash: \"XYZ....\")",
            "ChatManager.activeInstance?.message.send(replyMessage: message, uploadFile: uploadFile)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Send-an-image-message",
          "level" : 3,
          "text" : "Send an image message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To send a new image message use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:_:)-8yv5f",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let message = SendTextMessageRequest(threadId: threadId, textMessage: \"Test text\", messageType: .POD_SPACE_PICTURE)",
            "let imageRequest = UploadImageRequest(data: imaageData, hC: height, wC: width , fileName: \"Test.png\", mimeType: \"image\/png\" , userGroupHash: \"XYZ...\" )",
            "ChatManager.activeInstance?.message.send(textMessage: message, uploadFile: imageRequest)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Edit-Text-Message",
          "level" : 3,
          "text" : "Edit Text Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To edit a message call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/edit(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Editing a message requires that the message must be editable. You could check it through ",
                  "type" : "text"
                },
                {
                  "code" : "Message\/editable",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = EditMessageRequest(threadId: threadId, messageType: .TEXT, messageId: messageId, textMessage: \"Edited Text Message\")",
            "ChatManager.activeInstance?.message.edit(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Send-Reply-Message",
          "level" : 3,
          "text" : "Send Reply Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To send a reply text message insisde a thread call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/reply(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = ReplyMessageRequest(threadId: threadId, repliedTo: repliedTo, textMessage: \"Hello\", messageType: .TEXT)",
            "ChatManager.activeInstance?.message.reply(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Reply-with-file",
          "level" : 3,
          "text" : "Reply with file",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To reply to a message with uploading a file use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/reply(_:_:)-4dbh6",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let replyMsg = ReplyMessageRequest(threadId: 123456, repliedTo: 567890, textMessage: \"Use This File\", messageType: .POD_SPACE_FILE)",
            "let uploadFile = UploadFileRequest(data: fileData, fileExtension: \".txt\", fileName: \"Test\", mimeType: \"text\/plain\" , userGroupHash: \"XYZ....\")",
            "ChatManager.activeInstance?.message.reply(replyMessage: replyMsg, uploadFile: uploadFile)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Send-Location-Message",
          "level" : 3,
          "text" : "Send Location Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To send a message with location cordinate you should send call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:)-8qr0z",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = LocationMessageRequest(mapCenter: .init(lat: 37.33900249783756, lng: -122.00944807880965), threadId: threadId, userGroupHash: \"XYZ....\")",
            "ChatManager.activeInstance?.message.send(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Forward-Messages",
          "level" : 3,
          "text" : "Forward Messages",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To forward messages to a thread you must prepare a list of messageIds and a threadId call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:)-84dd1",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let msgIds = [123456, 78901,...]",
            "let req = ForwardMessageRequest(threadId: threadId, messageIds: msgIds)",
            "ChatManager.activeInstance?.message.send(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Get-History",
          "level" : 3,
          "text" : "Get History",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A list of messages of a thread for this reason call method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/history(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Messages those didn’t send properly will inform you of the appropriate closures.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = GetHistoryRequest(threadId: threadId, count: 100, offset: 0)",
            "ChatManager.activeInstance?.message.history(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Get-Hashtags",
          "level" : 3,
          "text" : "Get Hashtags",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A list of messages which contains hashtags. Call method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/history(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = GetHistoryRequest(threadId: threadId , hashtag: \"ios\")",
            "ChatManager.activeInstance?.message.history(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Pin-a-Message",
          "level" : 3,
          "text" : "Pin a Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For pin a message inside a thread. For checking the result use the property ",
              "type" : "text"
            },
            {
              "code" : "Message\/pinned",
              "type" : "codeVoice"
            },
            {
              "text" : ". Call method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/pin(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = PinUnpinMessageRequest(messageId: messageId)",
            "ChatManager.activeInstance?.message.pin(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "UNPin-a-Message",
          "level" : 3,
          "text" : "UNPin a Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For unpin a message inside a thread. For checking the result use the property ",
              "type" : "text"
            },
            {
              "code" : "Message\/pinned",
              "type" : "codeVoice"
            },
            {
              "text" : ". Call method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/unpin(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = PinUnpinMessageRequest(messageId: messageId)",
            "ChatManager.activeInstance?.message.unpin(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Clear-Thread-Messages-History",
          "level" : 3,
          "text" : "Clear Thread Messages History",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you need to clear messages history of a thread just call ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/clear(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(threadId: threadId)",
            "ChatManager.activeInstance?.message.clear(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Delete-a-Message",
          "level" : 3,
          "text" : "Delete a Message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For deleting a message call method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/delete(_:)-8n143",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "For deleting a message for all other users set ",
                  "type" : "text"
                },
                {
                  "code" : "DeleteMessageRequest\/deleteForAll",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " in initializer.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A message only can be deleted when it’s ",
                  "type" : "text"
                },
                {
                  "code" : "Message\/deletable",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = DeleteMessageRequest(messageId: messageId)",
            "ChatManager.activeInstance?.message.delete(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Delete-Multiple-Messages",
          "level" : 3,
          "text" : "Delete Multiple Messages",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For deleting multiple messages call method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/delete(_:)-2gdjl",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let msgIds = [894560, 4567892, ...]",
            "let req = BatchDeleteMessageRequest(threadId: threadId, messageIds: msgIds)",
            "ChatManager.activeInstance?.message.delete(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Get-the-list-of-messages-that-you-are-mentioned",
          "level" : 3,
          "text" : "Get the list of messages that you are mentioned",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For retrieving the list of messages that you have mentioned in a thread use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/mentions(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = MentionRequest(threadId: threadId, onlyUnreadMention: false)",
            "ChatManager.activeInstance?.message.mentions(.init)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "List-of-participants-who-delivered-the-message-to-them",
          "level" : 3,
          "text" : "List of participants who delivered the message to them.",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For retrieving the list of participants who the message delivered to them, use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/deliveredToParricipants(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = MessageDeliveredUsersRequest(messageId: messageId)",
            "ChatManager.activeInstance?.message.deliveredToParricipants(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "List-of-participants-who-have-seen-the-message",
          "level" : 3,
          "text" : "List of participants who have seen the message.",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For retrieving the list of participants who the message delivered to them, use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/seenByParticipants(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = MessageSeenByUsersRequest(messageId: messageId)",
            "ChatManager.activeInstance?.message.seenByParticipants(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Send-seen-of-a-message",
          "level" : 3,
          "text" : "Send seen of a message.",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For the time that your user opens a thread in your application, that is your responsibility to inform the other participants to tell them you have seen the message. For this matter, use the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/seen(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Sending a delivery of a message is Chat-SDK responsibility and it will happen automatically.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = MessageSeenRequest(messageId: messageId)",
            "ChatManager.activeInstance?.message.seen(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Cancel-a-message",
          "level" : 3,
          "text" : "Cancel a message.",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Cancel a message happens when a message is not sent by the SDK and canceling it will delete it from a cache of SDK respectively. For this call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/cancel(uniqueId:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "ChatManager.activeInstance?.message.cancel(uniqueId: \"XYZ...\")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Export-Messages-in-CSV",
          "level" : 3,
          "text" : "Export Messages in CSV",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To export a messages of a thread inside a ",
              "type" : "text"
            },
            {
              "code" : "CSV",
              "type" : "codeVoice"
            },
            {
              "text" : " file, call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/export(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Please remove the file after you have finished using it.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Every time you call this function it will remove the older file.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "This function only can export up to 10000 message at each call.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = GetHistoryRequest(threadId: threadId,",
            "                            fromTime: UInt(startDate.millisecondsSince1970),",
            "                            toTime: UInt(endDate.millisecondsSince1970))",
            "ChatManager.activeInstance?.message.export(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Essentials",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Chat\/documentation\/Chat\/GettingStarted",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingThreads",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingContacts",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingFiles",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingUsers",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingTags",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingBots",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingAssistants",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingMaps",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingSystem",
        "doc:\/\/Chat\/documentation\/Chat\/ErrorCodes"
      ],
      "title" : "Essentials"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/chat\/managingmessages"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Chat/documentation/Chat": {
  "abstract" : [
    {
      "text" : "With Chat SDK you can connect to the chat server without managing the socket state and send or receive messages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat",
  "images" : [
    {
      "identifier" : "icon.png",
      "type" : "icon"
    }
  ],
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Chat",
  "type" : "topic",
  "url" : "\/documentation\/chat"
},
"doc://Chat/documentation/Chat/ErrorCodes": {
  "abstract" : [
    {
      "text" : "List of all error codes locally in the chat SDK for server errors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ErrorCodes",
  "kind" : "article",
  "role" : "article",
  "title" : "Error Codes",
  "type" : "topic",
  "url" : "\/documentation\/chat\/errorcodes"
},
"doc://Chat/documentation/Chat/GettingStarted": {
  "abstract" : [
    {
      "text" : "Getting started with the Chat SDK and some tips and tricks to configure it properly.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/GettingStarted",
  "kind" : "article",
  "role" : "article",
  "title" : "Getting Started",
  "type" : "topic",
  "url" : "\/documentation\/chat\/gettingstarted"
},
"doc://Chat/documentation/Chat/ManagingAssistants": {
  "abstract" : [
    {
      "text" : "Adding a participant as an assistant.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingAssistants",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Assistants",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingassistants"
},
"doc://Chat/documentation/Chat/ManagingBots": {
  "abstract" : [
    {
      "text" : "For creating, add\/remove command, user bots, start\/stop.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingBots",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Bots",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingbots"
},
"doc://Chat/documentation/Chat/ManagingContacts": {
  "abstract" : [
    {
      "text" : "Managing contacts add, edit, delete, search, and more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingContacts",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Contacts",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingcontacts"
},
"doc://Chat/documentation/Chat/ManagingFiles": {
  "abstract" : [
    {
      "text" : "You could manage download and upload and so more in terms of working with files.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingFiles",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Files",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingfiles"
},
"doc://Chat/documentation/Chat/ManagingMaps": {
  "abstract" : [
    {
      "text" : "Converting lat, long to an address or searching through a map, or finding a route getting an image of lat, long.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingMaps",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Maps",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingmaps"
},
"doc://Chat/documentation/Chat/ManagingSystem": {
  "abstract" : [
    {
      "text" : "Manage system events.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingSystem",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing System",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingsystem"
},
"doc://Chat/documentation/Chat/ManagingTags": {
  "abstract" : [
    {
      "text" : "Tags are like folder for managing threads. You could Add, delete, edit and add\/remove tag participans.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingTags",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Tags",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingtags"
},
"doc://Chat/documentation/Chat/ManagingThreads": {
  "abstract" : [
    {
      "text" : "Managing threads, create P2P, Group, Channel or delete edit and so many more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingThreads",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Threads",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingthreads"
},
"doc://Chat/documentation/Chat/ManagingUsers": {
  "abstract" : [
    {
      "text" : "Manage users such as get a list of roles and so more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingUsers",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Users",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingusers"
},
"doc://Chat/documentation/Chat/MessageProtocol/cancel(uniqueId:)": {
  "abstract" : [
    {
      "text" : "Cancel a message send.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "cancel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "uniqueId"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/cancel(uniqueId:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "cancel(uniqueId:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/cancel(uniqueid:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/clear(_:)": {
  "abstract" : [
    {
      "text" : "Clear all messages inside a thread for user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "clear"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/clear(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "clear(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/clear(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/delete(_:)-2gdjl": {
  "abstract" : [
    {
      "text" : "Delete multiple messages at once.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delete"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO25BatchDeleteMessageRequestV",
      "text" : "BatchDeleteMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/delete(_:)-2gdjl",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "delete(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/delete(_:)-2gdjl"
},
"doc://Chat/documentation/Chat/MessageProtocol/delete(_:)-8n143": {
  "abstract" : [
    {
      "text" : "Delete a message if it’s ",
      "type" : "text"
    },
    {
      "code" : "Message\/deletable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delete"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO20DeleteMessageRequestV",
      "text" : "DeleteMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/delete(_:)-8n143",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "delete(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/delete(_:)-8n143"
},
"doc://Chat/documentation/Chat/MessageProtocol/deliveredToParricipants(_:)": {
  "abstract" : [
    {
      "text" : "Retrieve the list of participants to who the message was delivered to them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "deliveredToParricipants"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO28MessageDeliveredUsersRequestV",
      "text" : "MessageDeliveredUsersRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/deliveredToParricipants(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "deliveredToParricipants(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/deliveredtoparricipants(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/edit(_:)": {
  "abstract" : [
    {
      "text" : "Edit a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "edit"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO18EditMessageRequestV",
      "text" : "EditMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/edit(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "edit(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/edit(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/export(_:)": {
  "abstract" : [
    {
      "text" : "Every time you call this function old export file for the thread will be deleted and replaced with a new one. To manages your storage be cautious about removing the file whenever you don’t need this file.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This function can only export 10000 messages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "export"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO17GetHistoryRequestV",
      "text" : "GetHistoryRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/export(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "export(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/export(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/history(_:)": {
  "abstract" : [
    {
      "text" : "Get list of messages inside a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "history"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO17GetHistoryRequestV",
      "text" : "GetHistoryRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/history(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "history(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/history(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/mentions(_:)": {
  "abstract" : [
    {
      "text" : "Get messages that you have mentioned in a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mentions"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO14MentionRequestV",
      "text" : "MentionRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/mentions(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "mentions(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/mentions(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/pin(_:)": {
  "abstract" : [
    {
      "text" : "Pin a message inside a thread.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If you are a member in a channel you can not pin a message unless you are admin in the channel.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Only admins can pin a message in group or they should have access to pin a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pin"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22PinUnpinMessageRequestV",
      "text" : "PinUnpinMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/pin(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "pin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/pin(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/reply(_:)": {
  "abstract" : [
    {
      "text" : "Reply to a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reply"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO19ReplyMessageRequestV",
      "text" : "ReplyMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/reply(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "reply(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/reply(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/reply(_:_:)-4dbh6": {
  "abstract" : [
    {
      "text" : "Reply to a mesaage inside a thread with a file.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reply"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO19ReplyMessageRequestV",
      "text" : "ReplyMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO17UploadFileRequestV",
      "text" : "UploadFileRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/reply(_:_:)-4dbh6",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "reply(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/reply(_:_:)-4dbh6"
},
"doc://Chat/documentation/Chat/MessageProtocol/seen(_:)": {
  "abstract" : [
    {
      "text" : "Send seen to participants of a thread that informs you have seen the message already.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "seen"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO18MessageSeenRequestV",
      "text" : "MessageSeenRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/seen(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "seen(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/seen(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/seenByParticipants(_:)": {
  "abstract" : [
    {
      "text" : "Retrieve the list of participants to who have seen the message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "seenByParticipants"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO25MessageSeenByUsersRequestV",
      "text" : "MessageSeenByUsersRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/seenByParticipants(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "seenByParticipants(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/seenbyparticipants(_:)"
},
"doc://Chat/documentation/Chat/MessageProtocol/send(_:)-84dd1": {
  "abstract" : [
    {
      "text" : "Forwrad messages to a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO21ForwardMessageRequestV",
      "text" : "ForwardMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:)-84dd1",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "send(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/send(_:)-84dd1"
},
"doc://Chat/documentation/Chat/MessageProtocol/send(_:)-8kz5t": {
  "abstract" : [
    {
      "text" : "Send a plain text message to a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22SendTextMessageRequestV",
      "text" : "SendTextMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:)-8kz5t",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "send(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/send(_:)-8kz5t"
},
"doc://Chat/documentation/Chat/MessageProtocol/send(_:)-8qr0z": {
  "abstract" : [
    {
      "text" : "Send a location.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22LocationMessageRequestV",
      "text" : "LocationMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:)-8qr0z",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "send(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/send(_:)-8qr0z"
},
"doc://Chat/documentation/Chat/MessageProtocol/send(_:_:)-8yv5f": {
  "abstract" : [
    {
      "text" : "Send a file message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22SendTextMessageRequestV",
      "text" : "SendTextMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO18UploadImageRequestV",
      "text" : "UploadImageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:_:)-8yv5f",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "send(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/send(_:_:)-8yv5f"
},
"doc://Chat/documentation/Chat/MessageProtocol/send(_:_:)-s0vu": {
  "abstract" : [
    {
      "text" : "Send a file message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22SendTextMessageRequestV",
      "text" : "SendTextMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO17UploadFileRequestV",
      "text" : "UploadFileRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/send(_:_:)-s0vu",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "send(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/send(_:_:)-s0vu"
},
"doc://Chat/documentation/Chat/MessageProtocol/unpin(_:)": {
  "abstract" : [
    {
      "text" : "UnPin a message inside a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unpin"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22PinUnpinMessageRequestV",
      "text" : "PinUnpinMessageRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/MessageProtocol\/unpin(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "unpin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/messageprotocol\/unpin(_:)"
},
"icon.png": {
  "alt" : "App icon.",
  "identifier" : "icon.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/Chat\/icon.png"
    }
  ]
},
"message-flow.png": {
  "alt" : "How chat sdk works behind the scene.",
  "identifier" : "message-flow.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/Chat\/message-flow.png"
    }
  ]
}
}
}