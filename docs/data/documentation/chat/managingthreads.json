{
  "abstract" : [
    {
      "text" : "Managing threads, create P2P, Group, Channel or delete edit and so many more.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Chat\/documentation\/Chat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Chat\/documentation\/Chat\/ManagingThreads"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Chat"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Managing Threads"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Get-Threads",
          "level" : 3,
          "text" : "Get Threads",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Get list of theads. Call the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/get(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "You can send a request in pagination mode and set offset.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = ThreadsRequest(count: count, offset: offset)",
            "ChatManager.activeInstance?.conversation.get(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-a-thread",
          "level" : 3,
          "text" : "Create a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For creating a thread use the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/create(_:)-64b7s",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " method with an object of type ",
              "type" : "text"
            },
            {
              "code" : "CreateThreadRequest",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Each thread contains a ",
              "type" : "text"
            },
            {
              "code" : "Conversation\/type",
              "type" : "codeVoice"
            },
            {
              "text" : " which determine if the thread is P2P, Group, Channel or e.g.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let invitee = Invitee(id: \"\\(id)\", idType: .CONTACT_ID)",
            "ChatManager.activeInstance?.conversation.create(.init(invitees: [invitee], type: .NORMAL))"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-a-Thread-with-a-message",
          "level" : 3,
          "text" : "Create a Thread with a message",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Createing a thread with a message with the method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/create(_:)-3epo",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let invitee = Invitee(id: \"\\(123456)\", idType: .CONTACT_ID)",
            "let textMessage = CreateThreadMessage(text: \"Hello\")",
            "let req = CreateThreadWithMessage(invitees:[invitee], title: \"\", message: textMessage)",
            "ChatManager.activeInstance?.conversation.create(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-a-thread-with-a-message-and-upload-a-file",
          "level" : 3,
          "text" : "Create a thread with a message and upload a file",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For creating a thread with file use ",
              "type" : "text"
            },
            {
              "code" : "CreateThreadRequest",
              "type" : "codeVoice"
            },
            {
              "text" : " method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/create(_:)-64b7s",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Most of the closures here are optional if you don’t need one of them just don’t pass it as a parameter.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "let invitee = Invitee(id: \"\\(123456)\", idType: .CONTACT_ID)",
            "let req = CreateThreadRequest(invitees:[invitee], title: \"\")",
            "let textMessage = SendTextMessageRequest(textMessage: \"Hello\", messageType: .POD_SPACE_PICTURE, metadata: \"{your_json_metadata}\")",
            "let uploadReq = UploadFileRequest(data: imageData)",
            "ChatManager.activeInstance?.conversation.create(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Add-Participant-or-Participants",
          "level" : 3,
          "text" : "Add Participant or Participants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Add participants with contactIds, userName or coreUserId ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ParticipantProtocol\/add(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Each thread contains a ",
              "type" : "text"
            },
            {
              "code" : "Conversation\/type",
              "type" : "codeVoice"
            },
            {
              "text" : " which determine if the thread is P2P, Group, Channel or e.g.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = AddParticipantRequest(contactIds: [], threadId: threadId)",
            "ChatManager.activeInstance?.conversation.participant.add(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Delete-Participants",
          "level" : 3,
          "text" : "Delete Participants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Delete participants from a thread ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ParticipantProtocol\/remove(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = RemoveParticipantRequest(participantId: participantId, threadId: threadId)",
            "ChatManager.activeInstance?.conversation.participant.remove(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Join-To-a-thread",
          "level" : 3,
          "text" : "Join To a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Join to a public thread ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/join(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = JoinPublicThreadRequest(threadName: publicName)",
            "ChatManager.activeInstance?.conversation.join(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Close-a-thread",
          "level" : 3,
          "text" : "Close a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Admin of a thread can close a thread to prevent participants send a message. The Thread must be one of types: ",
              "type" : "text"
            },
            {
              "code" : "ThreadTypes\/channel",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "ThreadTypes\/channelGroup",
              "type" : "codeVoice"
            },
            {
              "text" : ",  ",
              "type" : "text"
            },
            {
              "code" : "ThreadTypes\/normal",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Use mehod ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/close(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like below:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Keep in mine ",
                  "type" : "text"
                },
                {
                  "code" : "ThreadTypes\/normal",
                  "type" : "codeVoice"
                },
                {
                  "text" : " must be a group, not a P2P thread.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.close(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Spam-a-thread",
          "level" : 3,
          "text" : "Spam a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For marking a thread spam, you sould use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/spam(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "With marking a thread as spam three events occur:",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An event of the creator of the thread got blocked.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An event for leaving the thread.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "An event that mentions that the content of the thread was deleted.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.spam(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Update-a-thread",
          "level" : 3,
          "text" : "Update a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For updating title, description, image of a thread use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/updateInfo(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = UpdateThreadInfoRequest(description: \"Description\", threadId: threadId, title: \"title\")",
            "ChatManager.activeInstance?.conversation.updateInfo(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Leave-a-thread",
          "level" : 3,
          "text" : "Leave a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "for leaving a thread use method  ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/leave(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If set ",
                  "type" : "text"
                },
                {
                  "code" : "LeaveThreadRequest\/clearHistory",
                  "type" : "codeVoice"
                },
                {
                  "text" : " to ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " all contents of the thread will be deleted for the user and even after joining again those contents will not be available.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = LeaveThreadRequest(threadId: threadId, clearHistory: true)",
            "ChatManager.activeInstance?.conversation.leave(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Replace-admin-and-leave-a-thread",
          "level" : 3,
          "text" : "Replace admin and leave a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you are the only admin of a thread and you have decided to leave the thread it’s better to find a person as an admin you should call method,  ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/leaveSafely(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = SafeLeaveThreadRequest(threadId: threadId, participantId: participantId)",
            "Chat.sharedInstance.leaveSaftly(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Delete-a-thread",
          "level" : 3,
          "text" : "Delete a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you have a ",
              "type" : "text"
            },
            {
              "code" : "Roles\/ownership",
              "type" : "codeVoice"
            },
            {
              "text" : " access of the thread you can completely delete the thread. ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/delete(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Following things will happen if you delete a thread:",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Important",
          "style" : "important",
          "type" : "aside"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "All members are deleted from the channel or group and they will grtbvhvefcdwsareceive a message about it.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "All members of the thread will receive a message that contains who deleted the thread.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.delete(.init)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "All-threadsIds",
          "level" : 3,
          "text" : "All threads(Ids)",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Getting the list of all threads by itself is not useful, if you set the summary of this request to true you will receive only the list of thread ids  ",
              "type" : "text"
            },
            {
              "code" : "[Int]",
              "type" : "codeVoice"
            },
            {
              "text" : "  so the only filed that will set is ",
              "type" : "text"
            },
            {
              "code" : "Conversation\/id",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = init(summary: true)",
            "ChatManager.activeInstance?.conversation.get(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Public-thread-name",
          "level" : 3,
          "text" : "Public thread name",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Before creating a public thread be sure that thread name is free and it’s not occupied.You can check this matter with ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/isNameAvailable(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = IsThreadNamePublicRequest(name: \"Social\")",
            "ChatManager.activeInstance?.conversation.isNameAvailable(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Mute-a-thread",
          "level" : 3,
          "text" : "Mute a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For mute a thread to prevent receive notification use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/mute(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.mute(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Unmute-a-thread",
          "level" : 3,
          "text" : "Unmute a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For unmuteing a thread to receive notification agian use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/unmute(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.unmute(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Pin-a-thread",
          "level" : 3,
          "text" : "Pin a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "With pining a thread you could put it at the top of list ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/pin(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.pin(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "UnPin-a-thread",
          "level" : 3,
          "text" : "UnPin a thread",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Unpin a thread that was pinned before ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/unpin(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = GeneralSubjectIdRequest(subjectId: threadId)",
            "ChatManager.activeInstance?.conversation.unpin(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Get-Thread-Participants",
          "level" : 3,
          "text" : "Get Thread Participants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For getting list of participants of a thread you first need to use inner property ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/participant",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ParticipantProtocol\/get(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "For getting the list of admins inside a thread just pass ",
                  "type" : "text"
                },
                {
                  "code" : "true",
                  "type" : "codeVoice"
                },
                {
                  "text" : " for ",
                  "type" : "text"
                },
                {
                  "code" : "Chat\/ThreadParticipantRequest\/admin",
                  "type" : "codeVoice"
                },
                {
                  "text" : " property in this request.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Tip",
          "style" : "tip",
          "type" : "aside"
        },
        {
          "code" : [
            "let req = ThreadParticipantRequest(threadId: threadId, admin: true)",
            "Chat.sharedInstance.conversation.participant.get(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Change-Thread-Type",
          "level" : 3,
          "text" : "Change Thread Type",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For changing the type of a thread use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/changeType(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = (threadId: threadId, type: .CHANNEL)",
            "ChatManager.activeInstance?.conversation.changeType(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Mutual-groups",
          "level" : 3,
          "text" : "Mutual groups",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For getting the list of threads that are mutuals between the current user and desired user, use method ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/mutual(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " like this:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let req = MutualGroupsRequest(toBeUser: invitee, count: count, offset: offset)",
            "ChatManager.activeInstance?.conversation.mutual(req)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Chat\/documentation\/Chat\/GettingStarted",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingMessages",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingContacts",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingFiles",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingUsers",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingTags",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingBots",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingAssistants",
        "doc:\/\/Chat\/documentation\/Chat\/ManagingMaps",
        "doc:\/\/Chat\/documentation\/Chat\/ErrorCodes"
      ],
      "title" : "Essentials"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/chat\/managingthreads"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Chat/documentation/Chat": {
  "abstract" : [
    {
      "text" : "With Chat SDK you can connect to the chat server without managing the socket state and send or receive messages.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat",
  "images" : [
    {
      "identifier" : "icon.png",
      "type" : "icon"
    }
  ],
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Chat",
  "type" : "topic",
  "url" : "\/documentation\/chat"
},
"doc://Chat/documentation/Chat/ErrorCodes": {
  "abstract" : [
    {
      "text" : "List of all error codes locally in the chat SDK for server errors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ErrorCodes",
  "kind" : "article",
  "role" : "article",
  "title" : "Error Codes",
  "type" : "topic",
  "url" : "\/documentation\/chat\/errorcodes"
},
"doc://Chat/documentation/Chat/GettingStarted": {
  "abstract" : [
    {
      "text" : "Getting started with the Chat SDK and some tips and tricks to configure it properly.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/GettingStarted",
  "kind" : "article",
  "role" : "article",
  "title" : "Getting Started",
  "type" : "topic",
  "url" : "\/documentation\/chat\/gettingstarted"
},
"doc://Chat/documentation/Chat/ManagingAssistants": {
  "abstract" : [
    {
      "text" : "Adding a participant as an assistant.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingAssistants",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Assistants",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingassistants"
},
"doc://Chat/documentation/Chat/ManagingBots": {
  "abstract" : [
    {
      "text" : "For creating, add\/remove command, user bots, start\/stop.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingBots",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Bots",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingbots"
},
"doc://Chat/documentation/Chat/ManagingContacts": {
  "abstract" : [
    {
      "text" : "Managing contacts add, edit, delete, search, and more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingContacts",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Contacts",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingcontacts"
},
"doc://Chat/documentation/Chat/ManagingFiles": {
  "abstract" : [
    {
      "text" : "You could manage download and upload and so more in terms of working with files.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingFiles",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Files",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingfiles"
},
"doc://Chat/documentation/Chat/ManagingMaps": {
  "abstract" : [
    {
      "text" : "Converting lat, long to an address or searching through a map, or finding a route getting an image of lat, long.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingMaps",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Maps",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingmaps"
},
"doc://Chat/documentation/Chat/ManagingMessages": {
  "abstract" : [
    {
      "text" : "You could Add, delete, edit, reply, forward and so many more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingMessages",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Messages",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingmessages"
},
"doc://Chat/documentation/Chat/ManagingTags": {
  "abstract" : [
    {
      "text" : "Tags are like folder for managing threads. You could Add, delete, edit and add\/remove tag participans.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingTags",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Tags",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingtags"
},
"doc://Chat/documentation/Chat/ManagingUsers": {
  "abstract" : [
    {
      "text" : "Manage users such as get a list of roles and so more.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ManagingUsers",
  "kind" : "article",
  "role" : "article",
  "title" : "Managing Users",
  "type" : "topic",
  "url" : "\/documentation\/chat\/managingusers"
},
"doc://Chat/documentation/Chat/ParticipantProtocol/add(_:)": {
  "abstract" : [
    {
      "text" : "Add participant to a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "add"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO21AddParticipantRequestV",
      "text" : "AddParticipantRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ParticipantProtocol\/add(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "add(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/participantprotocol\/add(_:)"
},
"doc://Chat/documentation/Chat/ParticipantProtocol/get(_:)": {
  "abstract" : [
    {
      "text" : "Get thread participants.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "get"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO24ThreadParticipantRequestV",
      "text" : "ThreadParticipantRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ParticipantProtocol\/get(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "get(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/participantprotocol\/get(_:)"
},
"doc://Chat/documentation/Chat/ParticipantProtocol/remove(_:)": {
  "abstract" : [
    {
      "text" : "Remove participants from a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "remove"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO24RemoveParticipantRequestV",
      "text" : "RemoveParticipantRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ParticipantProtocol\/remove(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "remove(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/participantprotocol\/remove(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/changeType(_:)": {
  "abstract" : [
    {
      "text" : "Change a type of thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "changeType"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23ChangeThreadTypeRequestV",
      "text" : "ChangeThreadTypeRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/changeType(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "changeType(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/changetype(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/close(_:)": {
  "abstract" : [
    {
      "text" : "Close a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "close"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/close(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "close(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/close(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/create(_:)-3epo": {
  "abstract" : [
    {
      "text" : "Create thread with a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "create"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23CreateThreadWithMessageV",
      "text" : "CreateThreadWithMessage"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/create(_:)-3epo",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "create(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/create(_:)-3epo"
},
"doc://Chat/documentation/Chat/ThreadProtocol/create(_:)-64b7s": {
  "abstract" : [
    {
      "text" : "Create a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "create"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO19CreateThreadRequestV",
      "text" : "CreateThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/create(_:)-64b7s",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "create(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/create(_:)-64b7s"
},
"doc://Chat/documentation/Chat/ThreadProtocol/delete(_:)": {
  "abstract" : [
    {
      "text" : "Delete a thread if you are admin in this thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delete"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/delete(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "delete(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/delete(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/get(_:)": {
  "abstract" : [
    {
      "text" : "Get list of threads.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "get"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO14ThreadsRequestV",
      "text" : "ThreadsRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/get(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "get(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/get(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/isNameAvailable(_:)": {
  "abstract" : [
    {
      "text" : "Check name for the public thread is not occupied.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isNameAvailable"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO25IsThreadNamePublicRequestV",
      "text" : "IsThreadNamePublicRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/isNameAvailable(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "isNameAvailable(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/isnameavailable(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/join(_:)": {
  "abstract" : [
    {
      "text" : "Join to a public thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "join"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23JoinPublicThreadRequestV",
      "text" : "JoinPublicThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/join(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "join(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/join(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/leave(_:)": {
  "abstract" : [
    {
      "text" : "Leave a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leave"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO18LeaveThreadRequestV",
      "text" : "LeaveThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/leave(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "leave(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/leave(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/leaveSafely(_:)": {
  "abstract" : [
    {
      "text" : "Leave a thrad with replaceing admin.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leaveSafely"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO22SafeLeaveThreadRequestV",
      "text" : "SafeLeaveThreadRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/leaveSafely(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "leaveSafely(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/leavesafely(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/mute(_:)": {
  "abstract" : [
    {
      "text" : "Mute a thread when a new event happens.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mute"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/mute(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "mute(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/mute(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/mutual(_:)": {
  "abstract" : [
    {
      "text" : "A list of mutual groups with a user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mutual"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO19MutualGroupsRequestV",
      "text" : "MutualGroupsRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/mutual(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "mutual(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/mutual(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/participant": {
  "abstract" : [
    {
      "text" : "Accessing to participants of a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "participant"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Chat19ParticipantProtocolP",
      "text" : "ParticipantProtocol"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/participant",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "participant",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/participant"
},
"doc://Chat/documentation/Chat/ThreadProtocol/pin(_:)": {
  "abstract" : [
    {
      "text" : "Pin a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pin"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/pin(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "pin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/pin(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/spam(_:)": {
  "abstract" : [
    {
      "text" : "Mark a thread as an spam",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "spam"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/spam(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "spam(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/spam(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/unmute(_:)": {
  "abstract" : [
    {
      "text" : "UNMute a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unmute"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/unmute(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "unmute(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/unmute(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/unpin(_:)": {
  "abstract" : [
    {
      "text" : "UNPin a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unpin"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23GeneralSubjectIdRequestV",
      "text" : "GeneralSubjectIdRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/unpin(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "unpin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/unpin(_:)"
},
"doc://Chat/documentation/Chat/ThreadProtocol/updateInfo(_:)": {
  "abstract" : [
    {
      "text" : "Update details of a thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateInfo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7ChatDTO23UpdateThreadInfoRequestV",
      "text" : "UpdateThreadInfoRequest"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Chat\/documentation\/Chat\/ThreadProtocol\/updateInfo(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateInfo(_:)",
  "type" : "topic",
  "url" : "\/documentation\/chat\/threadprotocol\/updateinfo(_:)"
},
"icon.png": {
  "alt" : "App icon.",
  "identifier" : "icon.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/icon.png"
    }
  ]
}
}
}